/*
Deployment script for master

This code was generated by a tool.
Changes to this file may cause incorrect behavior and will be lost if
the code is regenerated.
*/

GO
SET ANSI_NULLS, ANSI_PADDING, ANSI_WARNINGS, ARITHABORT, CONCAT_NULL_YIELDS_NULL, QUOTED_IDENTIFIER ON;

SET NUMERIC_ROUNDABORT OFF;


GO
:setvar DatabaseName "master"
:setvar DefaultFilePrefix "master"
:setvar DefaultDataPath "C:\Program Files\Microsoft SQL Server\MSSQL14.SQLEXPRESS\MSSQL\DATA\"
:setvar DefaultLogPath "C:\Program Files\Microsoft SQL Server\MSSQL14.SQLEXPRESS\MSSQL\DATA\"

GO
:on error exit
GO
/*
Detect SQLCMD mode and disable script execution if SQLCMD mode is not supported.
To re-enable the script after enabling SQLCMD mode, execute the following:
SET NOEXEC OFF; 
*/
:setvar __IsSqlCmdEnabled "True"
GO
IF N'$(__IsSqlCmdEnabled)' NOT LIKE N'True'
    BEGIN
        PRINT N'SQLCMD mode must be enabled to successfully execute this script.';
        SET NOEXEC ON;
    END


GO
USE [$(DatabaseName)];


GO
PRINT N'Rename refactoring operation with key 4ada1e06-32b1-429f-9e48-addf382e4ccd is skipped, element [dbo].[Organizations].[orgID] (SqlSimpleColumn) will not be renamed to OrgID';


GO
PRINT N'Rename refactoring operation with key e61a6d2a-5ff1-4776-a02d-6f588438a649 is skipped, element [dbo].[Challenges].[challengeID] (SqlSimpleColumn) will not be renamed to ChallengeID';


GO
PRINT N'Rename refactoring operation with key a15a2676-229d-495d-a96f-0ff9705961b2 is skipped, element [dbo].[OrgUserChallenges].[orgUserChallengeID] (SqlSimpleColumn) will not be renamed to OrgUserChallengeID';


GO
PRINT N'Rename refactoring operation with key c426a7e6-9078-4b43-b865-14b143e04feb is skipped, element [dbo].[OrgUsers].[orgUserID] (SqlSimpleColumn) will not be renamed to OrgUserID';


GO
PRINT N'Rename refactoring operation with key 9946a99d-6475-499e-8599-2712a2e3164d is skipped, element [dbo].[Users].[userID] (SqlSimpleColumn) will not be renamed to UserID';


GO
PRINT N'Rename refactoring operation with key 73414a0c-f7cc-4c7f-91d2-5b3e5dfa7aea is skipped, element [dbo].[OrgUsers].[challengeID] (SqlSimpleColumn) will not be renamed to ChallengeID';


GO
PRINT N'Rename refactoring operation with key a7a5613e-13e7-4fdc-b005-1bb40f9da167 is skipped, element [dbo].[OrgUserChallenges].[userID] (SqlSimpleColumn) will not be renamed to UserID';


GO
PRINT N'Rename refactoring operation with key ac66c300-da11-480a-b15b-560ec066a0d1 is skipped, element [dbo].[Challenge].[Id] (SqlSimpleColumn) will not be renamed to challengeID';


GO
PRINT N'Rename refactoring operation with key 111a1262-e469-460d-b73f-674725806e46 is skipped, element [dbo].[Organization].[Id] (SqlSimpleColumn) will not be renamed to orgID';


GO
PRINT N'Rename refactoring operation with key d053d45c-4ab2-46be-88a0-abf757c97844 is skipped, element [dbo].[User].[Id] (SqlSimpleColumn) will not be renamed to userID';


GO
PRINT N'Rename refactoring operation with key 9692f8f4-eb51-4de8-9243-3587f9af88a9 is skipped, element [dbo].[OrgUser].[Id] (SqlSimpleColumn) will not be renamed to orgUserID';


GO
PRINT N'Rename refactoring operation with key e0e493b6-746b-4709-8f53-8f04a50ec07a is skipped, element [dbo].[Authors].[name] (SqlSimpleColumn) will not be renamed to Name';


GO
PRINT N'Rename refactoring operation with key 9b50611c-3d22-4a62-96cd-a1b902bc8ae6 is skipped, element [dbo].[Books].[author] (SqlSimpleColumn) will not be renamed to Author';


GO
PRINT N'Rename refactoring operation with key 70a4a076-967b-4163-9d8e-d7a3c908b135 is skipped, element [dbo].[Books].[pages] (SqlSimpleColumn) will not be renamed to Pages';


GO
PRINT N'Rename refactoring operation with key 8594d051-af8f-4de2-87e8-b97ca940bb16 is skipped, element [dbo].[Challenges].[name] (SqlSimpleColumn) will not be renamed to Name';


GO
PRINT N'Rename refactoring operation with key 360c44d1-099d-42e1-95d4-4a3642aac6f3 is skipped, element [dbo].[Challenges].[beginDate] (SqlSimpleColumn) will not be renamed to BeginDate';


GO
PRINT N'Rename refactoring operation with key 066b5d62-895d-48c1-b19e-8124ec364240 is skipped, element [dbo].[Challenges].[endDate] (SqlSimpleColumn) will not be renamed to EndDate';


GO
PRINT N'Rename refactoring operation with key 49d336c8-3d19-4e9d-8eda-aec488f87427 is skipped, element [dbo].[Challenges].[type] (SqlSimpleColumn) will not be renamed to Type';


GO
PRINT N'Rename refactoring operation with key e7ffe963-662e-4b31-bf9a-c3105002e138 is skipped, element [dbo].[Challenges].[numGoal] (SqlSimpleColumn) will not be renamed to NumGoal';


GO
PRINT N'Rename refactoring operation with key 7f9e9d26-a4a6-4f84-b4c1-05eecd5eba31 is skipped, element [dbo].[Challenges].[orgID] (SqlSimpleColumn) will not be renamed to OrgID';


GO
PRINT N'Rename refactoring operation with key f8f83097-375f-4ebd-9013-f07e99ab2a7b is skipped, element [dbo].[ChallengeTypes].[name] (SqlSimpleColumn) will not be renamed to Name';


GO
PRINT N'Rename refactoring operation with key e59940c2-ab40-40c7-9439-0d9a4ca97dc9 is skipped, element [dbo].[Genres].[name] (SqlSimpleColumn) will not be renamed to Name';


GO
PRINT N'Rename refactoring operation with key beb273f1-81bf-4b32-a301-f934f64714ce is skipped, element [dbo].[Organizations].[name] (SqlSimpleColumn) will not be renamed to Name';


GO
PRINT N'Rename refactoring operation with key 300724f7-d38e-479d-9d20-e2ea4a99924a is skipped, element [dbo].[Organizations].[category] (SqlSimpleColumn) will not be renamed to Category';


GO
PRINT N'Rename refactoring operation with key a90b81ae-4557-4d69-a352-35fe041497bc is skipped, element [dbo].[OrgUserChallenges].[orgUserID] (SqlSimpleColumn) will not be renamed to OrgUserID';


GO
PRINT N'Rename refactoring operation with key f90b15c1-b08f-4e98-98a5-570c060a1805 is skipped, element [dbo].[OrgUsers].[orgID] (SqlSimpleColumn) will not be renamed to OrgID';


GO
PRINT N'Rename refactoring operation with key 54c01669-6208-4364-8c45-3bd29df45843 is skipped, element [dbo].[UserBooks].[bookID] (SqlSimpleColumn) will not be renamed to BookID';


GO
PRINT N'Rename refactoring operation with key 0f3cdea4-2b8c-4e9a-86b7-93004f3b6925 is skipped, element [dbo].[UserBooks].[userID] (SqlSimpleColumn) will not be renamed to UserID';


GO
PRINT N'Rename refactoring operation with key 956e5487-8c8f-4eed-b318-c68981a29bcd is skipped, element [dbo].[Users].[fname] (SqlSimpleColumn) will not be renamed to FirstName';


GO
PRINT N'Rename refactoring operation with key 65e1cb4d-9d1e-4692-bd65-4adee28f696b is skipped, element [dbo].[Users].[lname] (SqlSimpleColumn) will not be renamed to LastName';


GO
PRINT N'Rename refactoring operation with key 06d30fdd-1563-48d3-8036-023030499582 is skipped, element [dbo].[Organizations].[OrgID] (SqlSimpleColumn) will not be renamed to Id';


GO
PRINT N'Rename refactoring operation with key acc68595-0d91-4ed3-a730-e05ebbe9797e is skipped, element [dbo].[Challenges].[ChallengeID] (SqlSimpleColumn) will not be renamed to Id';


GO
PRINT N'Rename refactoring operation with key a6afce8e-82a2-4168-a399-4a68a35e197a is skipped, element [dbo].[OrgUserChallenges].[OrgUserChallengeID] (SqlSimpleColumn) will not be renamed to Id';


GO
PRINT N'Rename refactoring operation with key c2d1563f-9abb-4fe1-96e7-d6f30932496b is skipped, element [dbo].[OrgUsers].[OrgUserID] (SqlSimpleColumn) will not be renamed to Id';


GO
PRINT N'Rename refactoring operation with key f183219a-5683-4b8e-a8fe-6cf3a0967d33 is skipped, element [dbo].[Users].[UserID] (SqlSimpleColumn) will not be renamed to Id';


GO
PRINT N'Rename refactoring operation with key d924baf2-1325-4662-8853-58962ef86b61 is skipped, element [dbo].[OrgUsers].[ChallengeID] (SqlSimpleColumn) will not be renamed to UserID';


GO
PRINT N'Rename refactoring operation with key e1d3c492-3d98-429e-b126-198a28d493d4 is skipped, element [dbo].[OrgUserChallenges].[UserID] (SqlSimpleColumn) will not be renamed to ChallengeID';


GO
PRINT N'Creating [dbo].[Authors]...';


GO
CREATE TABLE [dbo].[Authors] (
    [Id]   INT           IDENTITY (1, 1) NOT NULL,
    [Name] NVARCHAR (50) NULL,
    PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating [dbo].[Books]...';


GO
CREATE TABLE [dbo].[Books] (
    [Id]     INT            IDENTITY (1, 1) NOT NULL,
    [Title]  NVARCHAR (MAX) NOT NULL,
    [Author] INT            NULL,
    [Genre]  INT            NULL,
    [Pages]  INT            NULL,
    PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating [dbo].[Challenges]...';


GO
CREATE TABLE [dbo].[Challenges] (
    [Id]        INT           IDENTITY (1, 1) NOT NULL,
    [Name]      NVARCHAR (50) NOT NULL,
    [BeginDate] DATE          NOT NULL,
    [EndDate]   DATE          NOT NULL,
    [Type]      INT           NOT NULL,
    [NumGoal]   INT           NOT NULL,
    [OrgID]     INT           NOT NULL,
    PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating [dbo].[ChallengeTypes]...';


GO
CREATE TABLE [dbo].[ChallengeTypes] (
    [Id]   INT           IDENTITY (1, 1) NOT NULL,
    [Name] NVARCHAR (50) NOT NULL,
    PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating [dbo].[Genres]...';


GO
CREATE TABLE [dbo].[Genres] (
    [Id]   INT            IDENTITY (1, 1) NOT NULL,
    [Name] NVARCHAR (MAX) NOT NULL,
    PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating [dbo].[OrganizationCategories]...';


GO
CREATE TABLE [dbo].[OrganizationCategories] (
    [Id]   INT           IDENTITY (1, 1) NOT NULL,
    [Name] NVARCHAR (50) NOT NULL,
    PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating [dbo].[Organizations]...';


GO
CREATE TABLE [dbo].[Organizations] (
    [Id]       INT           IDENTITY (1, 1) NOT NULL,
    [Name]     NVARCHAR (50) NOT NULL,
    [Category] INT           NULL,
    PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating [dbo].[OrgUsers]...';


GO
CREATE TABLE [dbo].[OrgUsers] (
    [Id]     INT IDENTITY (1, 1) NOT NULL,
    [OrgID]  INT NOT NULL,
    [UserID] INT NOT NULL,
    PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating [dbo].[UserBooks]...';


GO
CREATE TABLE [dbo].[UserBooks] (
    [Id]     INT IDENTITY (1, 1) NOT NULL,
    [BookID] INT NOT NULL,
    [UserID] INT NOT NULL,
    PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating [dbo].[Users]...';


GO
CREATE TABLE [dbo].[Users] (
    [Id]        INT           IDENTITY (1, 1) NOT NULL,
    [FirstName] NVARCHAR (50) NOT NULL,
    [LastName]  NVARCHAR (50) NULL,
    PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating unnamed constraint on [dbo].[Books]...';


GO
ALTER TABLE [dbo].[Books] WITH NOCHECK
    ADD FOREIGN KEY ([Author]) REFERENCES [dbo].[Authors] ([Id]);


GO
PRINT N'Creating unnamed constraint on [dbo].[Books]...';


GO
ALTER TABLE [dbo].[Books] WITH NOCHECK
    ADD FOREIGN KEY ([Genre]) REFERENCES [dbo].[Genres] ([Id]);


GO
PRINT N'Creating unnamed constraint on [dbo].[Challenges]...';


GO
ALTER TABLE [dbo].[Challenges] WITH NOCHECK
    ADD FOREIGN KEY ([Type]) REFERENCES [dbo].[ChallengeTypes] ([Id]);


GO
PRINT N'Creating unnamed constraint on [dbo].[Challenges]...';


GO
ALTER TABLE [dbo].[Challenges] WITH NOCHECK
    ADD FOREIGN KEY ([OrgID]) REFERENCES [dbo].[Organizations] ([Id]);


GO
PRINT N'Creating unnamed constraint on [dbo].[Organizations]...';


GO
ALTER TABLE [dbo].[Organizations] WITH NOCHECK
    ADD FOREIGN KEY ([Category]) REFERENCES [dbo].[OrganizationCategories] ([Id]);


GO
PRINT N'Creating unnamed constraint on [dbo].[OrgUsers]...';


GO
ALTER TABLE [dbo].[OrgUsers] WITH NOCHECK
    ADD FOREIGN KEY ([OrgID]) REFERENCES [dbo].[Organizations] ([Id]);


GO
PRINT N'Creating unnamed constraint on [dbo].[OrgUsers]...';


GO
ALTER TABLE [dbo].[OrgUsers] WITH NOCHECK
    ADD FOREIGN KEY ([UserID]) REFERENCES [dbo].[Users] ([Id]);


GO
PRINT N'Creating unnamed constraint on [dbo].[UserBooks]...';


GO
ALTER TABLE [dbo].[UserBooks] WITH NOCHECK
    ADD FOREIGN KEY ([BookID]) REFERENCES [dbo].[Books] ([Id]);


GO
PRINT N'Creating unnamed constraint on [dbo].[UserBooks]...';


GO
ALTER TABLE [dbo].[UserBooks] WITH NOCHECK
    ADD FOREIGN KEY ([UserID]) REFERENCES [dbo].[Users] ([Id]);


GO
-- Refactoring step to update target server with deployed transaction logs

IF OBJECT_ID(N'dbo.__RefactorLog') IS NULL
BEGIN
    CREATE TABLE [dbo].[__RefactorLog] (OperationKey UNIQUEIDENTIFIER NOT NULL PRIMARY KEY)
    EXEC sp_addextendedproperty N'microsoft_database_tools_support', N'refactoring log', N'schema', N'dbo', N'table', N'__RefactorLog'
END
GO
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = 'ac66c300-da11-480a-b15b-560ec066a0d1')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('ac66c300-da11-480a-b15b-560ec066a0d1')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '111a1262-e469-460d-b73f-674725806e46')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('111a1262-e469-460d-b73f-674725806e46')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = 'd053d45c-4ab2-46be-88a0-abf757c97844')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('d053d45c-4ab2-46be-88a0-abf757c97844')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '9692f8f4-eb51-4de8-9243-3587f9af88a9')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('9692f8f4-eb51-4de8-9243-3587f9af88a9')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '99504e63-b01f-4803-bbf1-4d3501f5bba1')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('99504e63-b01f-4803-bbf1-4d3501f5bba1')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '3d72cf47-f1c5-4607-9242-de0e28732944')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('3d72cf47-f1c5-4607-9242-de0e28732944')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '50e78c4d-4701-4ce9-affc-c0dd5c068ac9')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('50e78c4d-4701-4ce9-affc-c0dd5c068ac9')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = 'e7f8ceda-76c3-4b08-9200-586f635ea696')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('e7f8ceda-76c3-4b08-9200-586f635ea696')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = 'c53d8125-f462-4207-b904-03b0b4cb8675')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('c53d8125-f462-4207-b904-03b0b4cb8675')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = 'c55675b8-206f-44e1-9557-af09f20b6256')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('c55675b8-206f-44e1-9557-af09f20b6256')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '9bc9ec4a-1f4f-4659-973c-99a0d45ce279')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('9bc9ec4a-1f4f-4659-973c-99a0d45ce279')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = 'e0e493b6-746b-4709-8f53-8f04a50ec07a')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('e0e493b6-746b-4709-8f53-8f04a50ec07a')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '83cf047b-664d-4386-ab1e-0ae215af4cd1')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('83cf047b-664d-4386-ab1e-0ae215af4cd1')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '017e3336-28bb-45e0-b278-03b1a62a2c03')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('017e3336-28bb-45e0-b278-03b1a62a2c03')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '70899428-4409-475d-9f44-6cfdc070eec8')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('70899428-4409-475d-9f44-6cfdc070eec8')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '9b50611c-3d22-4a62-96cd-a1b902bc8ae6')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('9b50611c-3d22-4a62-96cd-a1b902bc8ae6')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '70a4a076-967b-4163-9d8e-d7a3c908b135')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('70a4a076-967b-4163-9d8e-d7a3c908b135')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = 'e61a6d2a-5ff1-4776-a02d-6f588438a649')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('e61a6d2a-5ff1-4776-a02d-6f588438a649')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '8594d051-af8f-4de2-87e8-b97ca940bb16')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('8594d051-af8f-4de2-87e8-b97ca940bb16')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '360c44d1-099d-42e1-95d4-4a3642aac6f3')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('360c44d1-099d-42e1-95d4-4a3642aac6f3')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '066b5d62-895d-48c1-b19e-8124ec364240')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('066b5d62-895d-48c1-b19e-8124ec364240')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '49d336c8-3d19-4e9d-8eda-aec488f87427')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('49d336c8-3d19-4e9d-8eda-aec488f87427')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = 'e7ffe963-662e-4b31-bf9a-c3105002e138')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('e7ffe963-662e-4b31-bf9a-c3105002e138')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '7f9e9d26-a4a6-4f84-b4c1-05eecd5eba31')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('7f9e9d26-a4a6-4f84-b4c1-05eecd5eba31')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '1e18f629-3f90-483b-ab14-5a3c863033ff')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('1e18f629-3f90-483b-ab14-5a3c863033ff')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = 'f8f83097-375f-4ebd-9013-f07e99ab2a7b')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('f8f83097-375f-4ebd-9013-f07e99ab2a7b')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = 'e7dc33d1-9fd2-427c-9dd3-09ff41a33899')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('e7dc33d1-9fd2-427c-9dd3-09ff41a33899')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = 'e59940c2-ab40-40c7-9439-0d9a4ca97dc9')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('e59940c2-ab40-40c7-9439-0d9a4ca97dc9')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '4ada1e06-32b1-429f-9e48-addf382e4ccd')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('4ada1e06-32b1-429f-9e48-addf382e4ccd')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = 'beb273f1-81bf-4b32-a301-f934f64714ce')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('beb273f1-81bf-4b32-a301-f934f64714ce')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '300724f7-d38e-479d-9d20-e2ea4a99924a')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('300724f7-d38e-479d-9d20-e2ea4a99924a')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = 'a15a2676-229d-495d-a96f-0ff9705961b2')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('a15a2676-229d-495d-a96f-0ff9705961b2')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = 'a90b81ae-4557-4d69-a352-35fe041497bc')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('a90b81ae-4557-4d69-a352-35fe041497bc')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = 'a7a5613e-13e7-4fdc-b005-1bb40f9da167')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('a7a5613e-13e7-4fdc-b005-1bb40f9da167')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = 'c426a7e6-9078-4b43-b865-14b143e04feb')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('c426a7e6-9078-4b43-b865-14b143e04feb')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = 'f90b15c1-b08f-4e98-98a5-570c060a1805')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('f90b15c1-b08f-4e98-98a5-570c060a1805')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '73414a0c-f7cc-4c7f-91d2-5b3e5dfa7aea')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('73414a0c-f7cc-4c7f-91d2-5b3e5dfa7aea')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '319db392-8aa9-48cb-a2c4-e38853786f3d')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('319db392-8aa9-48cb-a2c4-e38853786f3d')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '54c01669-6208-4364-8c45-3bd29df45843')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('54c01669-6208-4364-8c45-3bd29df45843')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '0f3cdea4-2b8c-4e9a-86b7-93004f3b6925')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('0f3cdea4-2b8c-4e9a-86b7-93004f3b6925')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '9946a99d-6475-499e-8599-2712a2e3164d')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('9946a99d-6475-499e-8599-2712a2e3164d')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '956e5487-8c8f-4eed-b318-c68981a29bcd')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('956e5487-8c8f-4eed-b318-c68981a29bcd')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '65e1cb4d-9d1e-4692-bd65-4adee28f696b')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('65e1cb4d-9d1e-4692-bd65-4adee28f696b')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = 'b0eba59a-dba1-42b0-9e90-64fdae1b27f3')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('b0eba59a-dba1-42b0-9e90-64fdae1b27f3')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '06d30fdd-1563-48d3-8036-023030499582')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('06d30fdd-1563-48d3-8036-023030499582')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = 'baf124b6-aa46-4148-9f6a-821051c1d660')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('baf124b6-aa46-4148-9f6a-821051c1d660')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '73fbc140-3f1d-4184-b712-9d38129588bb')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('73fbc140-3f1d-4184-b712-9d38129588bb')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = 'acc68595-0d91-4ed3-a730-e05ebbe9797e')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('acc68595-0d91-4ed3-a730-e05ebbe9797e')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = 'ebd2020c-8edc-4ef3-ba12-2353320eaeae')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('ebd2020c-8edc-4ef3-ba12-2353320eaeae')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = 'f61d6a53-848f-4ba2-b075-310bb6096522')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('f61d6a53-848f-4ba2-b075-310bb6096522')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '20c87b02-7f54-4e26-8c74-c27674fd33fe')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('20c87b02-7f54-4e26-8c74-c27674fd33fe')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = 'a6afce8e-82a2-4168-a399-4a68a35e197a')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('a6afce8e-82a2-4168-a399-4a68a35e197a')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = 'c2d1563f-9abb-4fe1-96e7-d6f30932496b')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('c2d1563f-9abb-4fe1-96e7-d6f30932496b')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '1f4a573c-d4f5-4cbd-a386-55bc674f2363')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('1f4a573c-d4f5-4cbd-a386-55bc674f2363')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = 'f183219a-5683-4b8e-a8fe-6cf3a0967d33')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('f183219a-5683-4b8e-a8fe-6cf3a0967d33')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = 'd924baf2-1325-4662-8853-58962ef86b61')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('d924baf2-1325-4662-8853-58962ef86b61')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = 'e1d3c492-3d98-429e-b126-198a28d493d4')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('e1d3c492-3d98-429e-b126-198a28d493d4')

GO

GO
/*
Post-Deployment Script Template							
--------------------------------------------------------------------------------------
 This file contains SQL statements that will be appended to the build script.		
 Use SQLCMD syntax to include a file in the post-deployment script.			
 Example:      :r .\myfile.sql								
 Use SQLCMD syntax to reference a variable in the post-deployment script.		
 Example:      :setvar TableName MyTable							
               SELECT * FROM [$(TableName)]					
--------------------------------------------------------------------------------------
*/

--Insert default challenge types
SET IDENTITY_INSERT ChallengeTypes ON 
GO

MERGE INTO ReadingChallengeDB.dbo.ChallengeTypes AS Target 
USING (VALUES 
  (1, N'Text'), 
  (2, N'Audio'), 
  (3, N'Video')
) 
AS Source (Id, Name) 
ON Target.Id = Source.Id 

WHEN MATCHED THEN 
UPDATE SET Name = Source.Name

WHEN NOT MATCHED BY TARGET THEN 
INSERT (Id, Name) 
VALUES (Id, Name);

SET IDENTITY_INSERT ChallengeTypes OFF 
GO

--Insert default Organization Categories
SET IDENTITY_INSERT OrganizationCategories ON 
GO


MERGE INTO ReadingChallengeDB.dbo.OrganizationCategories AS Target 
USING (VALUES 
  (1, N'Church'), 
  (2, N'Company'), 
  (3, N'Organization'),
  (4, N'Group'),
  (5, N'Library'),
  (6, N'School')
) 
AS Source (Id, Name) 
ON Target.Id = Source.Id 

WHEN MATCHED THEN 
UPDATE SET Name = Source.Name

WHEN NOT MATCHED BY TARGET THEN 
INSERT (Id, Name) 
VALUES (Id, Name);

SET IDENTITY_INSERT OrganizationCategories OFF 
GO

--Insert default Genres
SET IDENTITY_INSERT Genres ON 
GO


MERGE INTO ReadingChallengeDB.dbo.Genres AS Target 
USING (VALUES 
  (1, N'Nonfiction'), 
  (2, N'Fiction')  
) 
AS Source (Id, Name) 
ON Target.Id = Source.Id 

WHEN MATCHED THEN 
UPDATE SET Name = Source.Name

WHEN NOT MATCHED BY TARGET THEN 
INSERT (Id, Name) 
VALUES (Id, Name);

SET IDENTITY_INSERT Genres OFF 
GO

--***************COMMENT THIS OUT FOR PRODUCTION AS THIS IS JUST TEST DATAQ)*****************--
GO

GO
PRINT N'Checking existing data against newly created constraints';


GO
USE [$(DatabaseName)];


GO
CREATE TABLE [#__checkStatus] (
    id           INT            IDENTITY (1, 1) PRIMARY KEY CLUSTERED,
    [Schema]     NVARCHAR (256),
    [Table]      NVARCHAR (256),
    [Constraint] NVARCHAR (256)
);

SET NOCOUNT ON;

DECLARE tableconstraintnames CURSOR LOCAL FORWARD_ONLY
    FOR SELECT SCHEMA_NAME([schema_id]),
               OBJECT_NAME([parent_object_id]),
               [name],
               0
        FROM   [sys].[objects]
        WHERE  [parent_object_id] IN (OBJECT_ID(N'dbo.Books'), OBJECT_ID(N'dbo.Challenges'), OBJECT_ID(N'dbo.Organizations'), OBJECT_ID(N'dbo.OrgUsers'), OBJECT_ID(N'dbo.UserBooks'))
               AND [type] IN (N'F', N'C')
                   AND [object_id] IN (SELECT [object_id]
                                       FROM   [sys].[check_constraints]
                                       WHERE  [is_not_trusted] <> 0
                                              AND [is_disabled] = 0
                                       UNION
                                       SELECT [object_id]
                                       FROM   [sys].[foreign_keys]
                                       WHERE  [is_not_trusted] <> 0
                                              AND [is_disabled] = 0);

DECLARE @schemaname AS NVARCHAR (256);

DECLARE @tablename AS NVARCHAR (256);

DECLARE @checkname AS NVARCHAR (256);

DECLARE @is_not_trusted AS INT;

DECLARE @statement AS NVARCHAR (1024);

BEGIN TRY
    OPEN tableconstraintnames;
    FETCH tableconstraintnames INTO @schemaname, @tablename, @checkname, @is_not_trusted;
    WHILE @@fetch_status = 0
        BEGIN
            PRINT N'Checking constraint: ' + @checkname + N' [' + @schemaname + N'].[' + @tablename + N']';
            SET @statement = N'ALTER TABLE [' + @schemaname + N'].[' + @tablename + N'] WITH ' + CASE @is_not_trusted WHEN 0 THEN N'CHECK' ELSE N'NOCHECK' END + N' CHECK CONSTRAINT [' + @checkname + N']';
            BEGIN TRY
                EXECUTE [sp_executesql] @statement;
            END TRY
            BEGIN CATCH
                INSERT  [#__checkStatus] ([Schema], [Table], [Constraint])
                VALUES                  (@schemaname, @tablename, @checkname);
            END CATCH
            FETCH tableconstraintnames INTO @schemaname, @tablename, @checkname, @is_not_trusted;
        END
END TRY
BEGIN CATCH
    PRINT ERROR_MESSAGE();
END CATCH

IF CURSOR_STATUS(N'LOCAL', N'tableconstraintnames') >= 0
    CLOSE tableconstraintnames;

IF CURSOR_STATUS(N'LOCAL', N'tableconstraintnames') = -1
    DEALLOCATE tableconstraintnames;

SELECT N'Constraint verification failed:' + [Schema] + N'.' + [Table] + N',' + [Constraint]
FROM   [#__checkStatus];

IF @@ROWCOUNT > 0
    BEGIN
        DROP TABLE [#__checkStatus];
        RAISERROR (N'An error occurred while verifying constraints', 16, 127);
    END

SET NOCOUNT OFF;

DROP TABLE [#__checkStatus];


GO
PRINT N'Update complete.';


GO
