/*
Deployment script for ReadingChallengeDB

This code was generated by a tool.
Changes to this file may cause incorrect behavior and will be lost if
the code is regenerated.
*/

GO
SET ANSI_NULLS, ANSI_PADDING, ANSI_WARNINGS, ARITHABORT, CONCAT_NULL_YIELDS_NULL, QUOTED_IDENTIFIER ON;

SET NUMERIC_ROUNDABORT OFF;


GO
:setvar DatabaseName "ReadingChallengeDB"
:setvar DefaultFilePrefix "ReadingChallengeDB"
:setvar DefaultDataPath "C:\Program Files\Microsoft SQL Server\MSSQL14.SQLEXPRESS\MSSQL\DATA\"
:setvar DefaultLogPath "C:\Program Files\Microsoft SQL Server\MSSQL14.SQLEXPRESS\MSSQL\DATA\"

GO
:on error exit
GO
/*
Detect SQLCMD mode and disable script execution if SQLCMD mode is not supported.
To re-enable the script after enabling SQLCMD mode, execute the following:
SET NOEXEC OFF; 
*/
:setvar __IsSqlCmdEnabled "True"
GO
IF N'$(__IsSqlCmdEnabled)' NOT LIKE N'True'
    BEGIN
        PRINT N'SQLCMD mode must be enabled to successfully execute this script.';
        SET NOEXEC ON;
    END


GO
USE [$(DatabaseName)];


GO
PRINT N'The following operation was generated from a refactoring log file 06d30fdd-1563-48d3-8036-023030499582';

PRINT N'Rename [dbo].[Organizations].[OrgID] to Id';


GO
EXECUTE sp_rename @objname = N'[dbo].[Organizations].[OrgID]', @newname = N'Id', @objtype = N'COLUMN';


GO
PRINT N'The following operation was generated from a refactoring log file baf124b6-aa46-4148-9f6a-821051c1d660';

PRINT N'Rename [dbo].[Authors].[AuthorID] to Id';


GO
EXECUTE sp_rename @objname = N'[dbo].[Authors].[AuthorID]', @newname = N'Id', @objtype = N'COLUMN';


GO
PRINT N'The following operation was generated from a refactoring log file 73fbc140-3f1d-4184-b712-9d38129588bb';

PRINT N'Rename [dbo].[Books].[BookID] to Id';


GO
EXECUTE sp_rename @objname = N'[dbo].[Books].[BookID]', @newname = N'Id', @objtype = N'COLUMN';


GO
PRINT N'The following operation was generated from a refactoring log file acc68595-0d91-4ed3-a730-e05ebbe9797e';

PRINT N'Rename [dbo].[Challenges].[ChallengeID] to Id';


GO
EXECUTE sp_rename @objname = N'[dbo].[Challenges].[ChallengeID]', @newname = N'Id', @objtype = N'COLUMN';


GO
PRINT N'The following operation was generated from a refactoring log file ebd2020c-8edc-4ef3-ba12-2353320eaeae';

PRINT N'Rename [dbo].[ChallengeTypes].[ChallengeTypeID] to Id';


GO
EXECUTE sp_rename @objname = N'[dbo].[ChallengeTypes].[ChallengeTypeID]', @newname = N'Id', @objtype = N'COLUMN';


GO
PRINT N'The following operation was generated from a refactoring log file f61d6a53-848f-4ba2-b075-310bb6096522';

PRINT N'Rename [dbo].[Genres].[GenreID] to Id';


GO
EXECUTE sp_rename @objname = N'[dbo].[Genres].[GenreID]', @newname = N'Id', @objtype = N'COLUMN';


GO
PRINT N'The following operation was generated from a refactoring log file 20c87b02-7f54-4e26-8c74-c27674fd33fe';

PRINT N'Rename [dbo].[OrganizationCategories].[OrganizationCategoryID] to Id';


GO
EXECUTE sp_rename @objname = N'[dbo].[OrganizationCategories].[OrganizationCategoryID]', @newname = N'Id', @objtype = N'COLUMN';


GO
PRINT N'The following operation was generated from a refactoring log file a6afce8e-82a2-4168-a399-4a68a35e197a';

PRINT N'Rename [dbo].[OrgUserChallenges].[OrgUserChallengeID] to Id';


GO
EXECUTE sp_rename @objname = N'[dbo].[OrgUserChallenges].[OrgUserChallengeID]', @newname = N'Id', @objtype = N'COLUMN';


GO
PRINT N'The following operation was generated from a refactoring log file c2d1563f-9abb-4fe1-96e7-d6f30932496b';

PRINT N'Rename [dbo].[OrgUsers].[OrgUserID] to Id';


GO
EXECUTE sp_rename @objname = N'[dbo].[OrgUsers].[OrgUserID]', @newname = N'Id', @objtype = N'COLUMN';


GO
PRINT N'The following operation was generated from a refactoring log file 1f4a573c-d4f5-4cbd-a386-55bc674f2363';

PRINT N'Rename [dbo].[UserBooks].[UserBookID] to Id';


GO
EXECUTE sp_rename @objname = N'[dbo].[UserBooks].[UserBookID]', @newname = N'Id', @objtype = N'COLUMN';


GO
PRINT N'The following operation was generated from a refactoring log file f183219a-5683-4b8e-a8fe-6cf3a0967d33';

PRINT N'Rename [dbo].[Users].[UserID] to Id';


GO
EXECUTE sp_rename @objname = N'[dbo].[Users].[UserID]', @newname = N'Id', @objtype = N'COLUMN';


GO
-- Refactoring step to update target server with deployed transaction logs
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '06d30fdd-1563-48d3-8036-023030499582')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('06d30fdd-1563-48d3-8036-023030499582')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = 'baf124b6-aa46-4148-9f6a-821051c1d660')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('baf124b6-aa46-4148-9f6a-821051c1d660')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '73fbc140-3f1d-4184-b712-9d38129588bb')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('73fbc140-3f1d-4184-b712-9d38129588bb')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = 'acc68595-0d91-4ed3-a730-e05ebbe9797e')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('acc68595-0d91-4ed3-a730-e05ebbe9797e')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = 'ebd2020c-8edc-4ef3-ba12-2353320eaeae')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('ebd2020c-8edc-4ef3-ba12-2353320eaeae')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = 'f61d6a53-848f-4ba2-b075-310bb6096522')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('f61d6a53-848f-4ba2-b075-310bb6096522')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '20c87b02-7f54-4e26-8c74-c27674fd33fe')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('20c87b02-7f54-4e26-8c74-c27674fd33fe')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = 'a6afce8e-82a2-4168-a399-4a68a35e197a')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('a6afce8e-82a2-4168-a399-4a68a35e197a')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = 'c2d1563f-9abb-4fe1-96e7-d6f30932496b')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('c2d1563f-9abb-4fe1-96e7-d6f30932496b')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '1f4a573c-d4f5-4cbd-a386-55bc674f2363')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('1f4a573c-d4f5-4cbd-a386-55bc674f2363')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = 'f183219a-5683-4b8e-a8fe-6cf3a0967d33')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('f183219a-5683-4b8e-a8fe-6cf3a0967d33')

GO

GO
/*
Post-Deployment Script Template							
--------------------------------------------------------------------------------------
 This file contains SQL statements that will be appended to the build script.		
 Use SQLCMD syntax to include a file in the post-deployment script.			
 Example:      :r .\myfile.sql								
 Use SQLCMD syntax to reference a variable in the post-deployment script.		
 Example:      :setvar TableName MyTable							
               SELECT * FROM [$(TableName)]					
--------------------------------------------------------------------------------------
*/

--Insert default challenge types
SET IDENTITY_INSERT ChallengeTypes ON 
GO

MERGE INTO ReadingChallengeDB.dbo.ChallengeTypes AS Target 
USING (VALUES 
  (1, N'Text'), 
  (2, N'Audio'), 
  (3, N'Video')
) 
AS Source (Id, Name) 
ON Target.Id = Source.Id 

WHEN MATCHED THEN 
UPDATE SET Name = Source.Name

WHEN NOT MATCHED BY TARGET THEN 
INSERT (Id, Name) 
VALUES (Id, Name);

SET IDENTITY_INSERT ChallengeTypes OFF 
GO

--Insert default Organization Categories
SET IDENTITY_INSERT OrganizationCategories ON 
GO


MERGE INTO ReadingChallengeDB.dbo.OrganizationCategories AS Target 
USING (VALUES 
  (1, N'Church'), 
  (2, N'Company'), 
  (3, N'Organization'),
  (4, N'Group'),
  (5, N'Library'),
  (6, N'School')
) 
AS Source (Id, Name) 
ON Target.Id = Source.Id 

WHEN MATCHED THEN 
UPDATE SET Name = Source.Name

WHEN NOT MATCHED BY TARGET THEN 
INSERT (Id, Name) 
VALUES (Id, Name);

SET IDENTITY_INSERT OrganizationCategories OFF 
GO

--Insert default Genres
SET IDENTITY_INSERT Genres ON 
GO


MERGE INTO ReadingChallengeDB.dbo.Genres AS Target 
USING (VALUES 
  (1, N'Nonfiction'), 
  (2, N'Fiction')  
) 
AS Source (Id, Name) 
ON Target.Id = Source.Id 

WHEN MATCHED THEN 
UPDATE SET Name = Source.Name

WHEN NOT MATCHED BY TARGET THEN 
INSERT (Id, Name) 
VALUES (Id, Name);

SET IDENTITY_INSERT Genres OFF 
GO

--***************COMMENT THIS OUT FOR PRODUCTION AS THIS IS JUST TEST DATAQ)*****************--
GO

GO
PRINT N'Update complete.';


GO
